set( libchewing_src_DIR     ../../../libs/libchewing )
set( libchewing_build_DIR   ../../../libs/libchewing/outputs )
file(MAKE_DIRECTORY ${libchewing_build_DIR})

set(CMAKE_C_FLAGS "-g -O2 -Wall -fPIC ${CMAKE_C_FLAGS}")

# SQLITE
set(WITH_SQLITE3 true)
set(WITH_INTERNAL_SQLITE3 true)
set(SQLITE3_SRC_DIR ${libchewing_src_DIR}/thirdparty/sqlite-amalgamation)
include_directories(
    ${SQLITE3_SRC_DIR}
)

add_definitions(-DUNDER_POSIX -DPIC)
add_definitions(-DHAVE_CONFIG_H=1)
add_definitions(-DCHEWING_DATADIR="libchewing/")

include(CheckCCompilerFlag)

check_c_compiler_flag(-fvisibility=hidden FVISIBILITY_HIDDEN)
if(${FVISIBILITY_HIDDEN})
    set(CMAKE_C_FLAGS "-fvisibility=hidden ${CMAKE_C_FLAGS}")
endif()

include(CheckTypeSize)
check_type_size(uint16_t UINT16_T)

include_directories(
    ${libchewing_src_DIR}/include/
    ${libchewing_src_DIR}/include/internal/
    ${libchewing_src_DIR}/src/porting_layer/include/
    ${libchewing_src_DIR}/src/porting_layer/include/sys/
    ${libchewing_src_DIR}/thirdparty/sqlite-amalgamation/
)

add_library(chewing SHARED
    ${libchewing_src_DIR}/include/internal/chewing-utf8-util.h
    ${libchewing_src_DIR}/include/internal/key2pho-private.h
    ${libchewing_src_DIR}/include/internal/memory-private.h

    ${libchewing_src_DIR}/src/common/chewing-utf8-util.c
    ${libchewing_src_DIR}/src/common/key2pho.c

    ${libchewing_src_DIR}/include/chewing.h
    ${libchewing_src_DIR}/include/chewing-compat.h
    ${libchewing_src_DIR}/include/chewingio.h
    ${libchewing_src_DIR}/include/global.h
    ${libchewing_src_DIR}/include/mod_aux.h

    ${libchewing_src_DIR}/include/internal/chewing-private.h
    ${libchewing_src_DIR}/include/internal/chewingutil.h
    ${libchewing_src_DIR}/include/internal/choice-private.h
    ${libchewing_src_DIR}/include/internal/dict-private.h
    ${libchewing_src_DIR}/include/internal/global-private.h
    ${libchewing_src_DIR}/include/internal/pinyin-private.h
    ${libchewing_src_DIR}/include/internal/tree-private.h
    ${libchewing_src_DIR}/include/internal/userphrase-private.h
    ${libchewing_src_DIR}/include/internal/bopomofo-private.h

    ${libchewing_src_DIR}/src/compat.c
    ${libchewing_src_DIR}/src/chewingio.c
    ${libchewing_src_DIR}/src/chewingutil.c
    ${libchewing_src_DIR}/src/choice.c
    ${libchewing_src_DIR}/src/dict.c
    ${libchewing_src_DIR}/src/mod_aux.c
    ${libchewing_src_DIR}/src/pinyin.c
    ${libchewing_src_DIR}/src/porting_layer/include/plat_mmap.h
    ${libchewing_src_DIR}/src/porting_layer/include/plat_path.h
    ${libchewing_src_DIR}/src/porting_layer/include/plat_types.h
    ${libchewing_src_DIR}/src/porting_layer/include/sys/plat_posix.h
    ${libchewing_src_DIR}/src/porting_layer/include/sys/plat_windows.h
    ${libchewing_src_DIR}/src/porting_layer/src/plat_mmap_posix.c
    ${libchewing_src_DIR}/src/porting_layer/src/plat_mmap_windows.c
    ${libchewing_src_DIR}/src/porting_layer/src/plat_path.c
    ${libchewing_src_DIR}/src/porting_layer/src/rpl_malloc.c
    ${libchewing_src_DIR}/src/private.h
    ${libchewing_src_DIR}/src/tree.c
    ${libchewing_src_DIR}/src/userphrase.c
    ${libchewing_src_DIR}/src/bopomofo.c
)

if (WITH_SQLITE3)
    add_library(userphrase STATIC
        ${libchewing_src_DIR}/include/internal/chewing-sql.h

        ${libchewing_src_DIR}/src/chewing-sql.c
        ${libchewing_src_DIR}/src/userphrase-sql.c
    )

    if (WITH_INTERNAL_SQLITE3)
        find_package (Threads)
        add_library(sqlite3_library STATIC
            ${SQLITE3_SRC_DIR}/sqlite3.c
            ${SQLITE3_SRC_DIR}/sqlite3.h
        )
        target_link_libraries(sqlite3_library ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT})

        add_executable(sqlite3
            ${SQLITE3_SRC_DIR}/shell.c
        )
        target_link_libraries(sqlite3 sqlite3_library)
        set_target_properties(sqlite3 PROPERTIES
            RUNTIME_OUTPUT_DIRECTORY ${SQLITE3_SRC_DIR}
            RUNTIME_OUTPUT_DIRECTORY_DEBUG ${SQLITE3_SRC_DIR}
            RUNTIME_OUTPUT_DIRECTORY_RELEASE ${SQLITE3_SRC_DIR}
            RUNTIME_OUTPUT_DIRECTORY_RELEASE ${SQLITE3_SRC_DIR}
            RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SQLITE3_SRC_DIR}
        )
        target_link_libraries(userphrase sqlite3_library)
    else()
        target_link_libraries(testhelper ${SQLITE3_LIBRARY})
    endif()
else()
    add_library(userphrase STATIC
        ${libchewing_src_DIR}/include/internal/hash-private.h

        ${libchewing_src_DIR}/src/hash.c
        ${libchewing_src_DIR}/src/userphrase-hash.c
    )
endif()

target_link_libraries(chewing userphrase)